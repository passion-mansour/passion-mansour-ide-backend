user nginx;
worker_processes auto;  # Adjust to the number of cores in your EC2 instance

error_log /var/log/nginx/error.log warn;  # Adjust logging level
pid /var/run/nginx.pid;

events {
    worker_connections 1024;  # Adjust based on your expected load
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    upstream docker-nginx {
        server passion-mansour-ide-server-prod:7382;
    }

    server {
        listen 80;
        server_name _;  # Listen to all hostnames

        location / {
            proxy_pass http://docker-nginx;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 10M;  # Adjust as necessary
        }

        location /websocket {
            proxy_pass http://docker-nginx;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;

        sendfile on;
        keepalive_timeout 65;
    }
}
